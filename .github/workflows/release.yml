name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 8

    - name: Install dependencies
      run: pnpm install

    - name: Build frontend
      run: pnpm build

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Cache Rust dependencies
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: './src-tauri -> target'

    - name: Setup macOS code signing and notarization
      if: matrix.os == 'macos-latest'
      run: |
        # Create keychain
        security create-keychain -p "${{ secrets.MACOS_KEYCHAIN_PASSWORD }}" build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p "${{ secrets.MACOS_KEYCHAIN_PASSWORD }}" build.keychain
        security set-keychain-settings -t 3600 -u build.keychain
        
        # Import certificate
        echo "${{ secrets.MACOS_CERTIFICATE }}" | base64 --decode > certificate.p12
        security import certificate.p12 -k build.keychain -P "${{ secrets.MACOS_CERTIFICATE_PASSWORD }}" -T /usr/bin/codesign
        
        # Set keychain settings
        security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "${{ secrets.MACOS_KEYCHAIN_PASSWORD }}" build.keychain
        
        # Create entitlements file
        cat > entitlements.plist << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>com.apple.security.cs.allow-jit</key>
            <true/>
            <key>com.apple.security.cs.allow-unsigned-executable-memory</key>
            <true/>
            <key>com.apple.security.cs.allow-dyld-environment-variables</key>
            <true/>
            <key>com.apple.security.cs.disable-library-validation</key>
            <true/>
        </dict>
        </plist>
        EOF

    - name: Build and release Tauri app
      uses: tauri-apps/tauri-action@v0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        APPLE_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
        APPLE_CERTIFICATE_PASSWORD: ${{ secrets.MACOS_CERTIFICATE_PASSWORD }}
        APPLE_SIGNING_IDENTITY: ${{ secrets.MACOS_SIGNING_IDENTITY }}
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
        APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
      with:
        tagName: ${{ github.ref_name }}
        releaseName: 'Correctify ${{ github.ref_name }}'
        releaseBody: |
          ## What's New in ${{ github.ref_name }}
          
          This release includes:
          - Auto-update system with GitHub releases integration
          - Writing style selector with 5 different styles
          - Menubar app functionality
          - Sound notifications
          - Customizable global shortcuts
          - Cross-platform support (macOS, Windows, Linux)
          
          ## Installation
          
          Download the installer for your platform:
          - **macOS**: Download the `.dmg` file
          - **Windows**: Download the `.msi` file  
          - **Linux**: Download the `.AppImage` file
          
          ## Auto-Updates
          
          Correctify will automatically check for updates when you launch the app. You can also manually check for updates in Settings.
        releaseDraft: false
        prerelease: false
        args: '--bundles app,dmg,deb,appimage,msi'

    - name: Generate update manifest
      if: matrix.os == 'macos-latest'
      run: |
        # This will be handled by the tauri-action, but we can add custom logic here if needed
        echo "Update manifest will be generated by Tauri updater"
